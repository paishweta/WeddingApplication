/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package weddingapplicationlogin;

import java.awt.Button;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
//import weddingapplicationlogin.PlannerResponse.jTable1;


/**
 *
 * @author shwez
 */
public class UserRequest extends javax.swing.JFrame {
   
    Connection con;
    PreparedStatement pst;
    ResultSet rs;
    private Object JtextField1;
    private Button button;
    private Object jOptionPane;
    
    /**
     * Creates new form AdminPage
     */
    public  UserRequest(){
        initComponents();
          
        try{
            
            con = WeddingApplicationLogin.getConnection();
            pst = con.prepareStatement("SELECT `username`, `function_type`, `location`, `decor`, `catering`, `totalbudget` FROM `event_table` ");
            rs= pst.executeQuery();
           
            Vector total_row = new Vector();
            Vector column_heading = new Vector();
            
            column_heading.addElement("Username");
            column_heading.addElement("Type of Function");
            column_heading.addElement("Location");
            column_heading.addElement("Decoration");
            column_heading.addElement("Catering");
            column_heading.addElement("Total budget");
            
            while(rs.next()){
                Vector newRecord = new Vector();
//                newRecord.addElement(rs.getString("firstname"));
//                newRecord.addElement(rs.getString("lastname"));
                newRecord.addElement(rs.getString("username"));
                newRecord.addElement(rs.getString("function_type"));
                newRecord.addElement(rs.getString("location"));
                newRecord.addElement(rs.getString("decor"));
                newRecord.addElement(rs.getString("catering"));
                newRecord.addElement(rs.getString("totalbudget"));
                
                total_row.addElement(newRecord);
           }
            DefaultTableModel model = new DefaultTableModel(total_row,column_heading);
            jTable1.setModel(model);
            
                  
        }catch(Exception e){
            System.out.println(""+e);
        }
        
        try{
            
            con = WeddingApplicationLogin.getConnection();
            pst = con.prepareStatement("SELECT `planner_id`, `firstname`, `lastname`, `username`, `email`, `decor`, `address`, `function_type`, `mobile` FROM `planner` ");
            rs= pst.executeQuery();
           
            Vector total_row = new Vector();
            Vector column_heading = new Vector();
            
            column_heading.addElement("Planner ID");
            column_heading.addElement("Firstname");
            column_heading.addElement("Lastname");
            column_heading.addElement("Username");
            column_heading.addElement("Email");
            column_heading.addElement("Decoration");
            column_heading.addElement("Address");           
            column_heading.addElement("Type of Function");
            column_heading.addElement("Contact");
            
            while(rs.next()){
                Vector newRecord = new Vector();
                newRecord.addElement(rs.getString("planner_id"));
                newRecord.addElement(rs.getString("firstname"));
                newRecord.addElement(rs.getString("lastname"));
                newRecord.addElement(rs.getString("username"));
                newRecord.addElement(rs.getString("email"));
                newRecord.addElement(rs.getString("decor"));
                newRecord.addElement(rs.getString("address"));
                newRecord.addElement(rs.getString("function_type"));
                newRecord.addElement(rs.getString("mobile"));
              
                total_row.addElement(newRecord);
           }
            DefaultTableModel model = new DefaultTableModel(total_row,column_heading);
            jTable2.setModel(model);
            
        }catch(Exception e){
            System.out.println(""+e);
        }

    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooserBeanInfo1 = new com.toedter.calendar.JDateChooserBeanInfo();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(153, 204, 255));
        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton1.setText("HOME");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 0, 70, 60));

        jButton3.setBackground(new java.awt.Color(153, 204, 255));
        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton3.setText("ADD PLANNER");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, 140, 60));

        jButton4.setBackground(new java.awt.Color(153, 204, 255));
        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton4.setText("USER DETAILS");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 0, 130, 60));

        jLabel3.setFont(new java.awt.Font("Monotype Corsiva", 3, 48)); // NOI18N
        jLabel3.setText("Wedding Planner");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 380, 50));

        jLabel2.setFont(new java.awt.Font("Liberation Serif", 1, 18)); // NOI18N
        jLabel2.setText("USER REQUEST");
        jLabel2.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 140, 60));

        jButton7.setBackground(new java.awt.Color(153, 204, 255));
        jButton7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jButton7.setText("LOGOUT");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 0, 130, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 60));

        jScrollPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane1MouseClicked(evt);
            }
        });

        jTable1.setBackground(new java.awt.Color(153, 153, 255));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Firstname", "Lastname", "Username", "Email", "DOB", "Address","Contact"
            }

        )

        {
            public boolean isCellEditable(int row,int column){
                return false;
            }
        }

    );
    jTable1.getTableHeader().setReorderingAllowed(false);
    jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
        public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
        }
        public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            jTable1AncestorAdded(evt);
        }
        public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
        }
    });
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jTable1MouseEntered(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 740, 100));

    jTable2.setBackground(new java.awt.Color(153, 153, 255));
    jTable2.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null}
        },
        new String [] {
            "CLICK ME TO SEE PLANNER DETAILS"
        }
    ) {
        boolean[] canEdit = new boolean [] {
            false
        };

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable2MouseClicked(evt);
        }
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            jTable2MouseEntered(evt);
        }
    });
    jScrollPane2.setViewportView(jTable2);

    getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, 760, 110));

    jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel5.setText("(Add Username to send the data)");
    getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 240, 190, 40));

    jTextField1.setEditable(false);
    jTextField1.setBackground(new java.awt.Color(204, 255, 255));
    jTextField1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jTextField1.setToolTipText("Enter Username");
    jTextField1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField1ActionPerformed(evt);
        }
    });
    getContentPane().add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 240, 160, 40));

    jButton6.setBackground(new java.awt.Color(151, 151, 242));
    jButton6.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
    jButton6.setText("Send data");
    jButton6.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jButton6ActionPerformed(evt);
        }
    });
    getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 270, -1, 40));

    jLabel4.setBackground(new java.awt.Color(153, 204, 255));
    jLabel4.setFont(new java.awt.Font("Lucida Calligraphy", 1, 18)); // NOI18N
    jLabel4.setText("USER REQUEST");
    getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 60, 190, 60));

    jTextField2.setEditable(false);
    jTextField2.setBackground(new java.awt.Color(204, 255, 255));
    jTextField2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jTextField2.setToolTipText("Enter Username");
    jTextField2.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            jTextField2ActionPerformed(evt);
        }
    });
    getContentPane().add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 310, 160, 40));

    jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
    jLabel6.setText("To");
    getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 280, 20, 30));

    jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
    jLabel7.setText("(Add Planner name to whom you want to send data)");
    getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 310, 300, 40));

    jLabel1.setIcon(new javax.swing.ImageIcon("C:\\Users\\shwez\\Desktop\\bg.jpg")); // NOI18N
    getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1070, 620));

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        AddPlanner ap = new AddPlanner();
        ap.setVisible(true);
        this.setVisible(false);
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        User_details ud = new User_details();
        ud.setVisible(true);
        this.setVisible(false);       
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        AdminPage ap = new AdminPage();
        ap.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

  
         
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:

        String user = jTextField1.getText();
        String planner = jTextField2.getText();
                   
        if(user.equals("") || planner.equals("")){
            JOptionPane.showMessageDialog(rootPane, "Enter Username to update..!", "Error",1);
        }else{
            try{
                con = WeddingApplicationLogin.getConnection();
                pst = con.prepareStatement("UPDATE `event_table` SET planner_id = ? ,status=\"COMPLETE\" WHERE user_id = ? ");
                pst.setString(1, planner);
                pst.setString(2, user);
                pst.executeUpdate();
                 JOptionPane.showMessageDialog(rootPane, "Data sent to planner..!");
                
                AdminPage ap = new AdminPage();
                ap.setVisible(true);
                this.setVisible(false);
                    
//         }else{
//                    JOptionPane.showMessageDialog(rootPane, "No desired planner found");
//                }
//                
            }catch(Exception e){
                    System.out.println(""+e);
                }
            }
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTable1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1AncestorAdded

    private void jScrollPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane1MouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jScrollPane1MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        Login l = new Login();
        l.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)jTable2.getModel();
        int selectrowindex = jTable2.getSelectedRow();
        jTextField2.setText(tmodel.getValueAt(selectrowindex,0).toString());
     
    }//GEN-LAST:event_jTable2MouseClicked

    private void jTable1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseEntered
        // TODO add your handling code here:
            
        try{
            
            con = WeddingApplicationLogin.getConnection();
            pst = con.prepareStatement("SELECT `user_id`, `username`, `function_type`, `location`, `decor`, `catering`, `totalbudget`, `status` FROM `event_table` ");
            rs= pst.executeQuery();
           
            Vector total_row = new Vector();
            Vector column_heading = new Vector();
            
            column_heading.addElement("User ID");            
            column_heading.addElement("Username");
            column_heading.addElement("Type of Function");
            column_heading.addElement("Location");
            column_heading.addElement("Decoration");
            column_heading.addElement("Catering");
            column_heading.addElement("Total budget");
            column_heading.addElement("Status");
            
            while(rs.next()){
                Vector newRecord = new Vector();
                newRecord.addElement(rs.getString("user_id"));
                newRecord.addElement(rs.getString("username"));
                newRecord.addElement(rs.getString("function_type"));
                newRecord.addElement(rs.getString("location"));
                newRecord.addElement(rs.getString("decor"));
                newRecord.addElement(rs.getString("catering"));
                newRecord.addElement(rs.getString("totalbudget"));
                newRecord.addElement(rs.getString("status"));
               
                total_row.addElement(newRecord);
                
           }
            DefaultTableModel model = new DefaultTableModel(total_row,column_heading);
            jTable1.setModel(model);
            
                  
        }catch(Exception e){
            System.out.println(""+e);
        }
        
    }//GEN-LAST:event_jTable1MouseEntered

    private void jTable2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseEntered
        // TODO add your handling code here:
           try{
            
            con = WeddingApplicationLogin.getConnection();
            pst = con.prepareStatement("SELECT `planner_id`,`firstname`, `lastname`, `username`, `email`, `decor`, `address`, `function_type`, `mobile` FROM `planner` ");
            rs= pst.executeQuery();
           
            Vector total_row = new Vector();
            Vector column_heading = new Vector();
            
            column_heading.addElement("Planner ID");
            column_heading.addElement("Firstname");
            column_heading.addElement("Lastname");
            column_heading.addElement("Username");
            column_heading.addElement("Email");
            column_heading.addElement("Decoration");
            column_heading.addElement("Address");           
            column_heading.addElement("Type of Function");
            column_heading.addElement("Contact");
            
            while(rs.next()){
                Vector newRecord = new Vector();
                
                newRecord.addElement(rs.getString("planner_id"));
                newRecord.addElement(rs.getString("firstname"));
                newRecord.addElement(rs.getString("lastname"));
                newRecord.addElement(rs.getString("username"));
                newRecord.addElement(rs.getString("email"));
                newRecord.addElement(rs.getString("decor"));
                newRecord.addElement(rs.getString("address"));
                newRecord.addElement(rs.getString("function_type"));
                newRecord.addElement(rs.getString("mobile"));
              
                total_row.addElement(newRecord);
           }
            DefaultTableModel model = new DefaultTableModel(total_row,column_heading);
            jTable2.setModel(model);
            
        }catch(Exception e){
            System.out.println(""+e);
        }

    }//GEN-LAST:event_jTable2MouseEntered

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        DefaultTableModel tmodel = (DefaultTableModel)jTable1.getModel();
        int selectrowindex = jTable1.getSelectedRow();
        jTextField1.setText(tmodel.getValueAt(selectrowindex, 0).toString());
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserRequest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserRequest().setVisible(true);
            }
        });
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    public static javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private com.toedter.calendar.JDateChooserBeanInfo jDateChooserBeanInfo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    public static javax.swing.JTextField jTextField1;
    public static javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

    private void show_User() {
     
        try{
           
            Vector total_row = new Vector();
            Vector column_heading = new Vector();
            
            column_heading.addElement("Username");
            column_heading.addElement("Email");
            column_heading.addElement("DOB");
            column_heading.addElement("Address");
            column_heading.addElement("Contact");
            column_heading.addElement("Status");
            
            while(rs.next()){
                Vector newRecord = new Vector();
                newRecord.addElement(rs.getString("username"));
                newRecord.addElement(rs.getString("email"));
                newRecord.addElement(rs.getString("dob"));
                newRecord.addElement(rs.getString("address"));
                newRecord.addElement(rs.getString("mobile"));
                newRecord.addElement(rs.getString("status"));
                
                total_row.addElement(newRecord);
           }
            DefaultTableModel model = new DefaultTableModel(total_row,column_heading);
            jTable1.setModel(model);
            
                  
        }catch(Exception e){
            System.out.println(""+e);
        }
        
    }

    
}


                
// (QUERY FROM ABOVE)                   SELECT * FROM `event_table` INNER JOIN planner ON event_table.username= ? AND planner.username= ?  
//                 UPDATE `event_table` SET `planner_id`= ? WHERE username= ?  
                //TableModel model1 = jTable1.getModel();
//                    int[] indexs = jTable1.getSelectedRows();
//                    Object[] row = new Object[6];
//
//                    PlannerResponse pr = new PlannerResponse();
//                    DefaultTableModel model2 = (DefaultTableModel)pr.jTable1.getModel();
//
//                    for(int i = 0; i<indexs.length; i++){
//                        row[0] = model1.getValueAt(indexs[i], 0);
//                        row[1] = model1.getValueAt(indexs[i], 1);
//                        row[2] = model1.getValueAt(indexs[i], 2);
//                        row[3] = model1.getValueAt(indexs[i], 3);
//                        row[4] = model1.getValueAt(indexs[i], 4);
//                        row[5] = model1.getValueAt(indexs[i], 5);
//                        model2.addRow(row);
//                    
//                        
//          
